
------------------
Program ID: 17
Execution Stack: 
(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))))))))

Symbol Table:
[ 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))))))

Symbol Table:
[ 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))))))

Symbol Table:
[ 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))))))

Symbol Table:
[ 
v1: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))))))

Symbol Table:
[ 
v1: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))))))

Symbol Table:
[ 
v1: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))))))

Symbol Table:
[ 
v1: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(Ref(int) v3;(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))))))

Symbol Table:
[ 
v1: (0, int), 
v2: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(Ref(int) v3;(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))))))

Symbol Table:
[ 
v1: (0, int), 
v2: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
Ref(int) v3
(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))))

Symbol Table:
[ 
v1: (0, int), 
v2: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
Ref(int) v3
(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))))

Symbol Table:
[ 
v1: (0, int), 
v2: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))))

Symbol Table:
[ 
v1: (0, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(int cnt;(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))))

Symbol Table:
[ 
v1: (0, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
int cnt
(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))))

Symbol Table:
[ 
v1: (0, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
int cnt
(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))))

Symbol Table:
[ 
v1: (0, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))))

Symbol Table:
[ 
cnt: 0, 
v1: (0, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(new(v1, 2);;(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))))

Symbol Table:
[ 
cnt: 0, 
v1: (0, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
new(v1, 2);
(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))

Symbol Table:
[ 
cnt: 0, 
v1: (0, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
new(v1, 2);
(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))

Symbol Table:
[ 
cnt: 0, 
v1: (0, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 

Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(new(v2, 3);;(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
new(v2, 3);
(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
new(v2, 3);
(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (0, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (2, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(new(v3, 4);;(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (2, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
new(v3, 4);
(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (2, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
new(v3, 4);
(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (2, int), 
v3: (0, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(NewLatch:varname='cnt', expression=readHeap(v2)};(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100))))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
NewLatch:varname='cnt', expression=readHeap(v2)}
(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
NewLatch:varname='cnt', expression=readHeap(v2)}
(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))

Symbol Table:
[ 
cnt: 0, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:

------------------
Program ID: 17
Execution Stack: 
(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
(fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );;(Await(cnt);(print(100);(countDown(cnt) ;print(100)))))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );
(Await(cnt);(print(100);(countDown(cnt) ;print(100))))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
fork( (writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))) );
(Await(cnt);(print(100);(countDown(cnt) ;print(100))))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
(Await(cnt);(print(100);(countDown(cnt) ;print(100))))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
(writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
(Await(cnt);(print(100);(countDown(cnt) ;print(100))))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
(writeHeap(v1, readHeap(v1)*10);;(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
writeHeap(v1, readHeap(v1)*10);
(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
writeHeap(v1, readHeap(v1)*10);
(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->2] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
(print(readHeap(v1));(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
print(readHeap(v1))
(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
print(readHeap(v1))
(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
(countDown(cnt) ;fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
countDown(cnt) 
fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 0
Execution Stack: 
countDown(cnt) 
fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->3] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 0
Execution Stack: 
fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 0
Execution Stack: 
fork( (writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))) );

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 0
Execution Stack: 

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
(writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
(writeHeap(v2, readHeap(v2)*10);;(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
writeHeap(v2, readHeap(v2)*10);
(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
writeHeap(v2, readHeap(v2)*10);
(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->3] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
(print(readHeap(v2));(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
print(readHeap(v2))
(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
print(readHeap(v2))
(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
(countDown(cnt) ;fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
countDown(cnt) 
fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 1
Execution Stack: 
countDown(cnt) 
fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->2] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 1
Execution Stack: 
fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 1
Execution Stack: 
fork( (writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) )) );

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 1
Execution Stack: 

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 2
Execution Stack: 
(writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) ))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 2
Execution Stack: 
(writeHeap(v3, readHeap(v3)*10);;(print(readHeap(v3));countDown(cnt) ))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 2
Execution Stack: 
writeHeap(v3, readHeap(v3)*10);
(print(readHeap(v3));countDown(cnt) )

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 2
Execution Stack: 
writeHeap(v3, readHeap(v3)*10);
(print(readHeap(v3));countDown(cnt) )

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->4] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 2
Execution Stack: 
(print(readHeap(v3));countDown(cnt) )

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 2
Execution Stack: 
(print(readHeap(v3));countDown(cnt) )

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 2
Execution Stack: 
print(readHeap(v3))
countDown(cnt) 

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 2
Execution Stack: 
print(readHeap(v3))
countDown(cnt) 

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 2
Execution Stack: 
countDown(cnt) 

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 2
Execution Stack: 
countDown(cnt) 

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->1] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 2
Execution Stack: 

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 
Await(cnt)
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 
(print(100);(countDown(cnt) ;print(100)))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 
print(100)
(countDown(cnt) ;print(100))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 
print(100)
(countDown(cnt) ;print(100))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 
(countDown(cnt) ;print(100))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;
100

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 
(countDown(cnt) ;print(100))

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;
100

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 
countDown(cnt) 
print(100)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;
100

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 
countDown(cnt) 
print(100)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;
100

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 
print(100)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;
100
State id: 17;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 
print(100)

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;
100
State id: 17;

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 

------------------
Program ID: 17
Execution Stack: 

Symbol Table:
[ 
cnt: 1, 
v1: (1, int), 
v2: (2, int), 
v3: (3, int), 
]

Output Table:
20
State id: 0;
30
State id: 1;
40
State id: 2;
100
State id: 17;
100

File Table:
[ 
]
Heap: 
[1->20] [2->30] [3->40] 
Semaphore Table:
Latch Table:[1->0] 
